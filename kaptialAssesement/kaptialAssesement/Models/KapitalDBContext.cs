// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using kaptialAssesement.Models;
using Microsoft.EntityFrameworkCore;

namespace kaptialAssesement.Models;

public partial class KapitalDBContext : DbContext
{
    public KapitalDBContext(DbContextOptions<KapitalDBContext> options)
        : base(options)
    {

    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64B847DC81D1");

            entity.ToTable("Customer");

            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Category).WithMany(p => p.Customers)
                .HasForeignKey(d => d.CategoryId)
                .HasConstraintName("FK__Customer__Catego__267ABA7A");
        });

        modelBuilder.Entity<CustomerCategory>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__Customer__19093A2BCE4685C0");

            entity.ToTable("CustomerCategory");

            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.CategoryName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}